services:
    wallabag_core.http_client:
        alias: 'httplug.client.wallabag_core'

    wallabag_core.tags_assigner:
        class: Wallabag\CoreBundle\Helper\TagsAssigner
        arguments:
            - "@wallabag_core.tag_repository"

    wallabag_core.rule_based_tagger:
        class: Wallabag\CoreBundle\Helper\RuleBasedTagger
        arguments:
            - "@rulerz"
            - "@wallabag_core.tag_repository"
            - "@wallabag_core.entry_repository"
            - "@logger"

    wallabag_core.rule_based_ignore_origin_processor:
        class: Wallabag\CoreBundle\Helper\RuleBasedIgnoreOriginProcessor
        arguments:
            - "@rulerz"
            - "@logger"
            - "@wallabag_core.ignore_origin_instance_rule_repository"

    # repository as a service
    wallabag_core.entry_repository:
        class: Wallabag\CoreBundle\Repository\EntryRepository
        factory: [ "@doctrine.orm.default_entity_manager", getRepository ]
        arguments:
            - WallabagCoreBundle:Entry

    wallabag_core.tag_repository:
        class: Wallabag\CoreBundle\Repository\TagRepository
        factory: [ "@doctrine.orm.default_entity_manager", getRepository ]
        arguments:
            - WallabagCoreBundle:Tag

    wallabag_core.site_credential_repository:
        class: Wallabag\CoreBundle\Repository\SiteCredentialRepository
        factory: [ "@doctrine.orm.default_entity_manager", getRepository ]
        arguments:
            - WallabagCoreBundle:SiteCredential
        calls:
            - [ setCrypto, [ "@wallabag_core.helper.crypto_proxy" ] ]

    wallabag_core.ignore_origin_instance_rule_repository:
        class: Wallabag\CoreBundle\Repository\IgnoreOriginInstanceRuleRepository
        factory: [ "@doctrine.orm.default_entity_manager", getRepository ]
        arguments:
            - WallabagCoreBundle:IgnoreOriginInstanceRule

    wallabag_core.helper.redirect:
        class: Wallabag\CoreBundle\Helper\Redirect
        arguments:
            - "@router"
            - "@security.token_storage"

    wallabag_core.helper.prepare_pager_for_entries:
        class: Wallabag\CoreBundle\Helper\PreparePagerForEntries
        arguments:
            - "@security.token_storage"
            - "@router"

    wallabag_core.redis.client:
        class: Predis\Client
        arguments:
            -
                scheme: '%redis_scheme%'
                host: '%redis_host%'
                port: '%redis_port%'
                path: '%redis_path%'
                password: '%redis_password%'

    wallabag_core.entry.download_images.client:
        alias: 'httplug.client.wallabag_core.entry.download_images'
